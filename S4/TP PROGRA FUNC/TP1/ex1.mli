let pi = 3.14;;                                                 (* pas d'erreur *)
let num1 = pi +. 2;;                                            (* 2 n'est pas un flotant | il faut ajouter un point derrière le 2 *) 
let 2pi = 2. *. pi;;                                            (* le nom de la variable n'est pas correct elle commence par un nombre | on la renomme doublePi *) 
let double = fun num -> 2. *. num;;                             (*  *)             
let Double_pi = double pi;;                                     (* le nom d'une variable ne peux pas commencer par une majuscule | renommer la variable en double_pi *)     
let four = double 2;;                                           (* la fonction prend un float en paramètre et 2 est un int | après le 2 on rajoute un point '.' *) 
abs pi;;                                                        (* abs prend un int en entré et pi est un flotant | utiliser la fonctrion abs_float *)
abs_float pi;;                                                  (*  *)
let to_float_pair = fun (x,y) -> (float x, float y)             (*  *)                             
to_float_pair 2;;                                               (* la fonction prend un tuple en entré et un int a été donné | donner en argument (2, 0) *)
to_float_pair 1, 2;;                                            (* la fonction prend un tuple en entré et 2 int ont été donné hors d'un tuple | entourer les int de parenthèse *) 
let incr = fun num -> num + 1;;                                 (*  *)         
incr 1;;                                                        (*  *)
incr incr 1;;                                                   (* la fonction incr essaie de prendre la fonction incr en paramètre | écrire : incr (incr 1) *)