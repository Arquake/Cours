security:
  password_hashers:
    App\Entity\User: 'auto'

  providers:
    users:
      entity:
        class: App\Entity\User
        property: email

  firewalls:
    dev:
      pattern: ^/_(profiler|wdt)
      security: false

    main:
      stateless: true
      provider: users
      json_login:
        check_path: /api/login_check  # La route de login_check (dans routes.yaml)
        username_path: email
        password_path: password
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
      jwt: ~  # JWT middleware pour valider le token

    public_api:
        pattern: ^/api$
        security: false

    api:
      pattern: ^/api/
      stateless: true
      jwt: ~  # Applique la vérification JWT à toutes les routes commençant par /api

  access_control:
    - { path: ^/api$, roles: PUBLIC_ACCESS }
    - { path: ^/api/register, roles: PUBLIC_ACCESS }
    - { path: ^/api/login_check, roles: PUBLIC_ACCESS }  # Autorise l'accès à login_check sans authentification
    - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }  # Protège toutes les autres routes /api
